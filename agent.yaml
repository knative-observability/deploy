apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: super-role
rules:
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: super
  namespace: observability
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: super-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: super-role
subjects:
- kind: ServiceAccount
  name: super
  namespace: observability
---
apiVersion: v1
kind: Service
metadata:
  name: knative-agent
  namespace: observability
spec:
  selector:
    app: knative-agent
  ports:
    - name: http-usermetric
      protocol: TCP
      port: 9091
      targetPort: 9091
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: knative-agent
  namespace: observability
spec:
  replicas: 1
  selector:
    matchLabels:
      app: knative-agent
  template:
    metadata:
      labels:
        app: knative-agent
    spec:
      serviceAccountName: super
      containers:
        - name: knative-agent
          image: 192.168.103.220/library/knative-agent:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 9091
          resources:
            limits:
              cpu: "0.5"
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: observability
  labels:
    app: mongodb
spec:
  ports:
    - port: 27017
      targetPort: 27017
      name: mongodb
  clusterIP: None
  selector:
    app: mongodb
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  namespace: observability
spec:
  serviceName: mongodb
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:4.4.29
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongodb-data
              mountPath: /data/db
          resources:
            limits:
              cpu: "0.5"
              memory: "512Mi"
  volumeClaimTemplates:
    - metadata:
        name: mongodb-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: mongodb-knative-agent
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongodb-pv
spec:
  capacity:
    storage: 32Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: mongodb-knative-agent
  hostPath:
    path: /data/mongodb
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: mongodb-knative-agent
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
